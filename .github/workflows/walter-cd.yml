# This file is maintained by Walter CI, and may be rewritten.
# https://github.com/piotr-yuxuan/walter-ci
#
# You are free to remove this project from Walter CI realm by opening
# a PR. You may also create another workflow besides this one.

name: Walter CD
'on':
  repository_dispatch: null
  workflow_dispatch:
    inputs:
      walter-version:
        description: Walter version
        required: false
        type: string
      version-to-release:
        description: Version to release
        required: false
        type: string
  push:
    branches: '*'
concurrency:
  group: walter-cd
  cancel-in-progress: true
env:
  GIT_ASKPASS: ${HOME}/.walter-ci/bin/askpass.sh
  GIT_AUTHOR_EMAIL: ${{ secrets.WALTER_GIT_EMAIL }}
  GIT_AUTHOR_NAME: ${{ secrets.WALTER_AUTHOR_NAME }}
  GIT_COMMITTER_EMAIL: ${{ secrets.WALTER_GIT_EMAIL }}
  GIT_COMMITTER_NAME: ${{ secrets.WALTER_AUTHOR_NAME }}
  GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  VERSION_TO_RELEASE: ${{ github.event.inputs.version-to-release }}
  WALTER_VERSION: ${{ github.event.inputs.walter-version }}
jobs:
  run-tests:
    runs-on: ubuntu-latest
    name: Run tests
    steps:
    - uses: piotr-yuxuan/walter-ci@main
    - run: lein with-profile +walter/kaocha,+kaocha run -m kaocha.runner --skip-meta :slow --skip-meta :perf
  report-vulnerabilities:
    runs-on: ubuntu-latest
    name: Scan and report vulnerabilities
    steps:
    - uses: piotr-yuxuan/walter-ci@main
    - uses: actions/cache@8f1e2e02865c42348f9baddbbaafb1841dce610a
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-nvd-${{ hashFiles('**/project.clj') }}
        restore-keys: ${{ runner.os }}-maven-
    - run: git rm "./doc/Known vulnerabilities.txt"
      continue-on-error: true
    - run: clojure -T:security/nvd nvd.task/check :classpath '"'"$(lein with-profile -user,-dev classpath)"'"'
      continue-on-error: true
    - run: bb "$HOME/.walter-ci/cut-nvd.clj" ./target/nvd/dependency-check-report.csv
    - run: cp ./target/nvd/dependency-check-report.csv ./doc/known-vulnerabilities.csv
    - run: git add ./doc/known-vulnerabilities.csv
    - run: git diff --staged --exit-code
      continue-on-error: true
      id: diff
    - run: git commit --message "Update known vulnerabilities"
      if: steps.diff.outcome == 'failure'
    - name: git push
      run: walter retry
      if: steps.diff.outcome == 'failure'
      env:
        WALTER_TRY: git push
        WALTER_BEFORE_RETRY: git pull --rebase
  list-licenses:
    runs-on: ubuntu-latest
    name: List dependency licenses
    steps:
    - uses: piotr-yuxuan/walter-ci@main
    - run: lein licenses :csv > ./doc/Licenses.csv
    - run: sort -o ./doc/Licenses.csv{,}
    - run: awk -i inplace 'BEGINFILE{print "Library name,Version,License name"}{print}' ./doc/Licenses.csv
    - run: git add ./doc/Licenses.csv
    - run: git diff --staged --exit-code
      continue-on-error: true
      id: diff
    - run: git commit --message "List dependency licenses"
      if: steps.diff.outcome == 'failure'
    - name: git push
      run: walter retry
      if: steps.diff.outcome == 'failure'
      env:
        WALTER_TRY: git push
        WALTER_BEFORE_RETRY: git pull --rebase
  release-artifacts:
    runs-on: ubuntu-latest
    name: Release artifacts
    if: ${{ github.event.inputs.version-to-release != '' }}
    needs: run-tests
    environment:
      name: release
    steps:
    - uses: piotr-yuxuan/walter-ci@main
    - name: Set version to release
      run: |-
        VERSION_FILE=$(ls resources/*.version)
        echo ${VERSION_TO_RELEASE} > ${VERSION_FILE}
        git add ${VERSION_FILE}
    - run: git diff --staged --exit-code
      continue-on-error: true
      id: diff
    - run: |-
        git commit --message "Version ${VERSION_TO_RELEASE}" --message "[skip ci]"
        git tag -a ${VERSION_TO_RELEASE}
      if: steps.diff.outcome == 'failure'
    - name: git push --follow-tags
      run: walter retry
      if: steps.diff.outcome == 'failure'
      env:
        WALTER_TRY: git push --follow-tags
        WALTER_BEFORE_RETRY: git pull --rebase
    - run: lein uberjar
    - uses: softprops/action-gh-release@fe9a9bd3295828558c7a3c004f23f3bf77d155b2
      with:
        generate_release_notes: true
        draft: true
        tag_name: ${{ github.event.inputs.version-to-release }}
        fail_on_unmatched_files: true
        files: target/*-standalone.jar
    - if: false
      name: lein deploy clojars
      run: walter retry
      env:
        WALTER_TRY: lein deploy clojars
    - if: false
      name: lein deploy github
      run: walter retry
      env:
        WALTER_TRY: lein deploy github
