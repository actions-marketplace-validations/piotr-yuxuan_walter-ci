name: Walter
on:
  push:
    branches: '*'
env:
  WALTER_GIT_EMAIL: ${{ secrets.WALTER_GIT_EMAIL }}
jobs:
  cancel-previous:
    runs-on: ubuntu-latest
    name: Cancel Previous Runs
    steps:
      - uses: styfle/cancel-workflow-action@0.9.0
        with:
          all_but_latest: true
          access_token: ${{ github.token }}
  #############################################################################
  # Jobs for Walter grooming
  #############################################################################
  code-style:
    runs-on: ubuntu-latest
    name: Fix and report code style
    continue-on-error: true
    steps:
      - uses: actions/checkout@main
      - uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            /opt/hostedtoolcache/Leiningen/
          key: ${{ runner.os }}-leiningen-${{ hashFiles('**/project.clj') }}
          restore-keys: |
            ${{ runner.os }}-leiningen-
      - run: env
      - uses: DeLaGuardo/clojure-lint-action@master
        with:
          clj-kondo-args: --lint src test
          github_token: ${{ secrets.GITHUB_TOKEN }}
  coverage:
    runs-on: ubuntu-latest
    name: Report code coverage of test
    steps:
      - uses: actions/checkout@main
      - uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            /opt/hostedtoolcache/Leiningen/
          key: ${{ runner.os }}-leiningen-${{ hashFiles('**/project.clj') }}
          restore-keys: |
            ${{ runner.os }}-leiningen-
      - uses: DeLaGuardo/setup-clojure@master
        with:
          lein: 2.9.6
      - run: env
      - run: lein cloverage
  conform-gh:
    runs-on: ubuntu-latest
    name: Conform GitHub repository
    env:
      WALTER_GITHUB_TOKEN: ${{ secrets.WALTER_GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@main
      - run: env
      - run: sleep 1
  ns-sort:
    runs-on: ubuntu-latest
    name: Sort namespace forms
    steps:
      - uses: actions/checkout@main
      - uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            /opt/hostedtoolcache/Leiningen/
          key: ${{ runner.os }}-leiningen-${{ hashFiles('**/project.clj') }}
          restore-keys: |
            ${{ runner.os }}-leiningen-
      - uses: DeLaGuardo/setup-clojure@master
        with:
          lein: 2.9.6
      - run: env
      - run: lein ns-sort
  update:
    runs-on: ubuntu-latest
    name: Update dependency versions
    steps:
      - uses: actions/checkout@main
      - uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            /opt/hostedtoolcache/Leiningen/
          key: ${{ runner.os }}-leiningen-${{ hashFiles('**/project.clj') }}
          restore-keys: |
            ${{ runner.os }}-leiningen-
      - uses: DeLaGuardo/setup-clojure@master
        with:
          lein: 2.9.6
      - run: env
      - run: lein ancient upgrade :all :check-clojure
  licenses:
    runs-on: ubuntu-latest
    name: List dependency licences
    needs: [update]
    steps:
      - uses: actions/checkout@main
      - uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            /opt/hostedtoolcache/Leiningen/
          key: ${{ runner.os }}-leiningen-${{ hashFiles('**/project.clj') }}
          restore-keys: |
            ${{ runner.os }}-leiningen-
      - uses: DeLaGuardo/setup-clojure@master
        with:
          lein: 2.9.6
      - run: env
      - run: lein licenses
  vulnerabilities:
    runs-on: ubuntu-latest
    name: Report known dependency vulnerabilities
    needs: [update]
    steps:
      - uses: actions/checkout@main
      - uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            /opt/hostedtoolcache/Leiningen/
          key: ${{ runner.os }}-leiningen-${{ hashFiles('**/project.clj') }}
          restore-keys: |
            ${{ runner.os }}-leiningen-
      - uses: DeLaGuardo/setup-clojure@master
        with:
          lein: 2.9.6
      - run: env
      - run: lein nvd check
  documentation:
    runs-on: ubuntu-latest
    name: Update documentation
    steps:
      - uses: DeLaGuardo/setup-clojure@master
        with:
          lein: 2.9.6
      - uses: actions/checkout@main
      - run: env
      - run: sleep 30
  funding:
    runs-on: ubuntu-latest
    name: Ensure FUNDING.yml is present
    steps:
      - uses: actions/checkout@main
      - run: sleep 1

  #############################################################################
  # Deploy job, run after grooming jobs if all successful
  #############################################################################
  deploy:
    runs-on: ubuntu-latest
    env:
      WALTER_GITHUB_TOKEN: ${{ secrets.WALTER_GITHUB_TOKEN }}
      WALTER_CLOJARS_TOKEN: ${{ secrets.WALTER_CLOJARS_TOKEN }}
      WALTER_CLOJARS_USERNAME: ${{ secrets.WALTER_CLOJARS_USERNAME }}
    name: Run tests, push git references, and finally deploy artifacts
    needs: [code-style, coverage, conform-gh, ns-sort, documentation]
    steps:
      - uses: actions/checkout@main
      - uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            /opt/hostedtoolcache/Leiningen/
          key: ${{ runner.os }}-leiningen-${{ hashFiles('**/project.clj') }}
          restore-keys: |
            ${{ runner.os }}-leiningen-
      - uses: DeLaGuardo/setup-clojure@master
        with:
          lein: 2.9.6
      - name: Run tests
        run: sleep 30
      - name: Push Walter commits and tags to GitHub
        run: sleep 30
      - name: Deploy
        run: sleep 30
